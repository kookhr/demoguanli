#!/bin/bash

# Serv00 ÁéØÂ¢ÉÁÆ°ÁêÜÁ≥ªÁªü‰∏ÄÈîÆÈÉ®ÁΩ≤ËÑöÊú¨
# ‰ΩøÁî®ÊñπÊ≥ï: ./deploy-serv00-complete.sh

set -e

echo "üöÄ ÂºÄÂßã Serv00 ÁéØÂ¢ÉÁÆ°ÁêÜÁ≥ªÁªüÈÉ®ÁΩ≤..."

# È¢úËâ≤ÂÆö‰πâ
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# ÈÖçÁΩÆÂèòÈáè - ËØ∑Ê†πÊçÆÊÇ®ÁöÑÂÆûÈôÖÊÉÖÂÜµ‰øÆÊîπ
SERV00_USER=""                    # ÊÇ®ÁöÑ Serv00 Áî®Êà∑Âêç
SERV00_DOMAIN=""                  # ÊÇ®ÁöÑÂüüÂêçÔºåÂ¶Ç: username.serv00.net
DB_NAME="environment_manager"     # Êï∞ÊçÆÂ∫ìÂêçÁß∞
DB_USER=""                        # Êï∞ÊçÆÂ∫ìÁî®Êà∑Âêç
DB_PASSWORD=""                    # Êï∞ÊçÆÂ∫ìÂØÜÁ†Å
PROJECT_NAME="environment-manager"

# È´òÁ∫ßÈÖçÁΩÆÔºàÈÄöÂ∏∏‰∏çÈúÄË¶Å‰øÆÊîπÔºâ
BACKUP_ENABLED=true               # ÊòØÂê¶ÂêØÁî®Â§á‰ªΩ
CLEANUP_ENABLED=true              # ÊòØÂê¶Ê∏ÖÁêÜ‰∏¥Êó∂Êñá‰ª∂
VERIFY_DEPLOYMENT=true            # ÊòØÂê¶È™åËØÅÈÉ®ÁΩ≤ÁªìÊûú

# Ê£ÄÊü•ÈÖçÁΩÆ
check_config() {
    echo -e "${BLUE}üìã Ê£ÄÊü•ÈÖçÁΩÆ...${NC}"
    
    if [ -z "$SERV00_USER" ]; then
        echo -e "${RED}‚ùå ÈîôËØØ: ËØ∑Âú®ËÑöÊú¨‰∏≠ËÆæÁΩÆ SERV00_USER${NC}"
        exit 1
    fi
    
    if [ -z "$SERV00_DOMAIN" ]; then
        echo -e "${RED}‚ùå ÈîôËØØ: ËØ∑Âú®ËÑöÊú¨‰∏≠ËÆæÁΩÆ SERV00_DOMAIN${NC}"
        exit 1
    fi
    
    if [ -z "$DB_USER" ]; then
        echo -e "${RED}‚ùå ÈîôËØØ: ËØ∑Âú®ËÑöÊú¨‰∏≠ËÆæÁΩÆ DB_USER${NC}"
        exit 1
    fi
    
    if [ -z "$DB_PASSWORD" ]; then
        echo -e "${RED}‚ùå ÈîôËØØ: ËØ∑Âú®ËÑöÊú¨‰∏≠ËÆæÁΩÆ DB_PASSWORD${NC}"
        exit 1
    fi
    
    echo -e "${GREEN}‚úÖ ÈÖçÁΩÆÊ£ÄÊü•ÂÆåÊàê${NC}"
}

# Ê£ÄÊü•‰æùËµñ
check_dependencies() {
    echo -e "${BLUE}üîç Ê£ÄÊü•‰æùËµñ...${NC}"
    
    # Ê£ÄÊü• Node.js
    if ! command -v node &> /dev/null; then
        echo -e "${RED}‚ùå ÈîôËØØ: Êú™ÊâæÂà∞ Node.js${NC}"
        exit 1
    fi
    
    # Ê£ÄÊü• npm
    if ! command -v npm &> /dev/null; then
        echo -e "${RED}‚ùå ÈîôËØØ: Êú™ÊâæÂà∞ npm${NC}"
        exit 1
    fi
    
    # Ê£ÄÊü• SSH
    if ! command -v ssh &> /dev/null; then
        echo -e "${RED}‚ùå ÈîôËØØ: Êú™ÊâæÂà∞ SSH${NC}"
        exit 1
    fi
    
    echo -e "${GREEN}‚úÖ ‰æùËµñÊ£ÄÊü•ÂÆåÊàê${NC}"
}

# ÊûÑÂª∫ÂâçÁ´ØÈ°πÁõÆ
build_frontend() {
    echo -e "${BLUE}üî® ÊûÑÂª∫ÂâçÁ´ØÈ°πÁõÆ...${NC}"
    
    # ÂÆâË£Ö‰æùËµñ
    npm install
    
    # ÊûÑÂª∫È°πÁõÆ
    npm run build
    
    if [ ! -d "dist" ]; then
        echo -e "${RED}‚ùå ÈîôËØØ: ÊûÑÂª∫Â§±Ë¥•ÔºåÊú™ÊâæÂà∞ dist ÁõÆÂΩï${NC}"
        exit 1
    fi
    
    echo -e "${GREEN}‚úÖ ÂâçÁ´ØÊûÑÂª∫ÂÆåÊàê${NC}"
}

# ÂàõÂª∫ÁéØÂ¢ÉÈÖçÁΩÆÊñá‰ª∂
create_env_config() {
    echo -e "${BLUE}üìù ÂàõÂª∫ÁéØÂ¢ÉÈÖçÁΩÆÊñá‰ª∂...${NC}"
    
    # ÂàõÂª∫ .env Êñá‰ª∂
    cat > api/.env << EOF
# Serv00 Êï∞ÊçÆÂ∫ìÈÖçÁΩÆ
DB_HOST=localhost
DB_NAME=${DB_NAME}
DB_USER=${DB_USER}
DB_PASSWORD=${DB_PASSWORD}
DB_PORT=3306

# API ÈÖçÁΩÆ
API_BASE_URL=/api
JWT_SECRET=$(openssl rand -base64 32)
JWT_EXPIRATION=86400

# Â∫îÁî®ÈÖçÁΩÆ
APP_ENV=production
APP_DEBUG=false
APP_URL=https://${SERV00_DOMAIN}

# Êó•ÂøóÈÖçÁΩÆ
LOG_LEVEL=error
LOG_FILE=/tmp/environment_manager.log
EOF
    
    echo -e "${GREEN}‚úÖ ÁéØÂ¢ÉÈÖçÁΩÆÊñá‰ª∂ÂàõÂª∫ÂÆåÊàê${NC}"
}

# ÂàõÂª∫ .htaccess Êñá‰ª∂
create_htaccess() {
    echo -e "${BLUE}üìù ÂàõÂª∫ .htaccess Êñá‰ª∂...${NC}"
    
    # ‰∏∫ÂâçÁ´ØÂàõÂª∫ .htaccess
    cat > dist/.htaccess << 'EOF'
# ÂêØÁî®ÈáçÂÜôÂºïÊìé
RewriteEngine On

# SPA Ë∑ØÁî±ÊîØÊåÅ
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(?!api/).*$ /index.html [L]

# API Ë∑ØÁî±ÈáçÂÜô
RewriteRule ^api/(.*)$ /api/index.php [L,QSA]

# ÂêØÁî® Gzip ÂéãÁº©
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
    AddOutputFilterByType DEFLATE application/json
</IfModule>

# ËÆæÁΩÆÁºìÂ≠ò
<IfModule mod_expires.c>
    ExpiresActive on
    ExpiresByType text/css "access plus 1 year"
    ExpiresByType application/javascript "access plus 1 year"
    ExpiresByType image/png "access plus 1 year"
    ExpiresByType image/jpg "access plus 1 year"
    ExpiresByType image/jpeg "access plus 1 year"
    ExpiresByType image/gif "access plus 1 year"
    ExpiresByType image/svg+xml "access plus 1 year"
</IfModule>

# ÂÆâÂÖ®Â§¥
<IfModule mod_headers.c>
    Header always set X-Frame-Options DENY
    Header always set X-Content-Type-Options nosniff
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    Header always set X-XSS-Protection "1; mode=block"
</IfModule>

# Á¶ÅÊ≠¢ËÆøÈóÆÊïèÊÑüÊñá‰ª∂
<Files ".env">
    Order allow,deny
    Deny from all
</Files>

<Files "*.sql">
    Order allow,deny
    Deny from all
</Files>
EOF
    
    # ‰∏∫ API ÂàõÂª∫ .htaccess
    cat > api/.htaccess << 'EOF'
# ÂêØÁî®ÈáçÂÜôÂºïÊìé
RewriteEngine On

# Â∞ÜÊâÄÊúâËØ∑Ê±ÇÈáçÂÆöÂêëÂà∞ index.php
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.*)$ index.php [L,QSA]

# ËÆæÁΩÆ PHP ÈÖçÁΩÆ
php_value upload_max_filesize 10M
php_value post_max_size 10M
php_value memory_limit 128M
php_value max_execution_time 300

# ÂÆâÂÖ®ÈÖçÁΩÆ
<Files ".env">
    Order allow,deny
    Deny from all
</Files>

# ÂêØÁî®ÈîôËØØÊó•Âøó
php_flag log_errors on
php_value error_log /tmp/php_errors.log
EOF
    
    echo -e "${GREEN}‚úÖ .htaccess Êñá‰ª∂ÂàõÂª∫ÂÆåÊàê${NC}"
}

# ÂáÜÂ§áÈÉ®ÁΩ≤Êñá‰ª∂
prepare_deployment() {
    echo -e "${BLUE}üì¶ ÂáÜÂ§áÈÉ®ÁΩ≤Êñá‰ª∂...${NC}"
    
    # ÂàõÂª∫ÈÉ®ÁΩ≤ÁõÆÂΩï
    mkdir -p deployment
    
    # Â§çÂà∂ÂâçÁ´ØÊñá‰ª∂
    cp -r dist/* deployment/
    
    # Â§çÂà∂ API Êñá‰ª∂
    cp -r api deployment/
    
    # Â§çÂà∂Êï∞ÊçÆÂ∫ìÊñá‰ª∂
    cp -r database deployment/
    
    # ÂàõÂª∫ÈÉ®ÁΩ≤‰ø°ÊÅØÊñá‰ª∂
    cat > deployment/DEPLOYMENT_INFO.txt << EOF
Environment Manager - Serv00 Deployment
========================================

ÈÉ®ÁΩ≤Êó∂Èó¥: $(date)
ÁâàÊú¨: 1.0.0
ÂüüÂêç: ${SERV00_DOMAIN}
Êï∞ÊçÆÂ∫ì: ${DB_NAME}

Êñá‰ª∂ÁªìÊûÑ:
- index.html (ÂâçÁ´ØÂÖ•Âè£)
- assets/ (ÂâçÁ´ØËµÑÊ∫ê)
- api/ (ÂêéÁ´Ø API)
- database/ (Êï∞ÊçÆÂ∫ìËÑöÊú¨)

ÈÉ®ÁΩ≤ÂêéÈúÄË¶ÅÊâßË°åÁöÑÊ≠•È™§:
1. ÂàõÂª∫Êï∞ÊçÆÂ∫ì: ${DB_NAME}
2. ÂØºÂÖ•Êï∞ÊçÆÂ∫ìÁªìÊûÑ: mysql -u ${DB_USER} -p ${DB_NAME} < database/init.sql
3. ÈÖçÁΩÆ PHP ÁéØÂ¢ÉÂèòÈáè
4. ÊµãËØï API ËøûÊé•: https://${SERV00_DOMAIN}/api/health

ÁÆ°ÁêÜÂëòË¥¶Êà∑:
Áî®Êà∑Âêç: admin
ÂØÜÁ†Å: admin123 (ËØ∑Á´ãÂç≥‰øÆÊîπ)
EOF
    
    echo -e "${GREEN}‚úÖ ÈÉ®ÁΩ≤Êñá‰ª∂ÂáÜÂ§áÂÆåÊàê${NC}"
}

# ‰∏ä‰º†Âà∞ Serv00
upload_to_serv00() {
    echo -e "${BLUE}üì§ ‰∏ä‰º†Êñá‰ª∂Âà∞ Serv00...${NC}"
    
    # ‰ΩøÁî® rsync ‰∏ä‰º†Êñá‰ª∂
    echo -e "${YELLOW}Ê≠£Âú®‰∏ä‰º†Êñá‰ª∂ÔºåËØ∑ËæìÂÖ• SSH ÂØÜÁ†Å...${NC}"
    
    rsync -avz --delete \
        --exclude='.git*' \
        --exclude='node_modules' \
        --exclude='*.log' \
        deployment/ \
        ${SERV00_USER}@${SERV00_DOMAIN}:domains/${SERV00_DOMAIN}/public_html/
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ Êñá‰ª∂‰∏ä‰º†ÂÆåÊàê${NC}"
    else
        echo -e "${RED}‚ùå Êñá‰ª∂‰∏ä‰º†Â§±Ë¥•${NC}"
        exit 1
    fi
}

# ËøúÁ®ãÊï∞ÊçÆÂ∫ìÂàùÂßãÂåñ
remote_database_setup() {
    echo -e "${BLUE}üóÑÔ∏è ÂàùÂßãÂåñËøúÁ®ãÊï∞ÊçÆÂ∫ì...${NC}"
    
    echo -e "${YELLOW}Ê≠£Âú®ËøûÊé•Âà∞ Serv00 ÊâßË°åÊï∞ÊçÆÂ∫ìÂàùÂßãÂåñ...${NC}"
    
    ssh ${SERV00_USER}@${SERV00_DOMAIN} << EOF
# ÂàõÂª∫Êï∞ÊçÆÂ∫ì
mysql -u ${DB_USER} -p${DB_PASSWORD} -e "CREATE DATABASE IF NOT EXISTS ${DB_NAME} DEFAULT CHARACTER SET utf8mb4 DEFAULT COLLATE utf8mb4_unicode_ci;"

# ÂØºÂÖ•Êï∞ÊçÆÂ∫ìÁªìÊûÑ
mysql -u ${DB_USER} -p${DB_PASSWORD} ${DB_NAME} < domains/${SERV00_DOMAIN}/public_html/database/init.sql

# Ê£ÄÊü•Êï∞ÊçÆÂ∫ì
mysql -u ${DB_USER} -p${DB_PASSWORD} ${DB_NAME} -e "SHOW TABLES;"

echo "Êï∞ÊçÆÂ∫ìÂàùÂßãÂåñÂÆåÊàê"
EOF
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ Êï∞ÊçÆÂ∫ìÂàùÂßãÂåñÂÆåÊàê${NC}"
    else
        echo -e "${RED}‚ùå Êï∞ÊçÆÂ∫ìÂàùÂßãÂåñÂ§±Ë¥•${NC}"
        exit 1
    fi
}

# È™åËØÅÈÉ®ÁΩ≤
verify_deployment() {
    echo -e "${BLUE}üîç È™åËØÅÈÉ®ÁΩ≤...${NC}"
    
    # Ê£ÄÊü•ÁΩëÁ´ôÊòØÂê¶ÂèØËÆøÈóÆ
    echo -e "${BLUE}üì° Ê£ÄÊü•ÁΩëÁ´ôÂèØËÆøÈóÆÊÄß...${NC}"
    
    if curl -s --head "https://${SERV00_DOMAIN}" | head -n 1 | grep -q "200\|301\|302"; then
        echo -e "${GREEN}‚úÖ ÁΩëÁ´ôÂèØÊ≠£Â∏∏ËÆøÈóÆ${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  ÁΩëÁ´ôÂèØËÉΩÈúÄË¶ÅÂá†ÂàÜÈíüÊâçËÉΩÁîüÊïà${NC}"
    fi
    
    # Ê£ÄÊü• API ÂÅ•Â∫∑Áä∂ÊÄÅ
    echo -e "${BLUE}üîå Ê£ÄÊü• API Áä∂ÊÄÅ...${NC}"
    
    if curl -s "https://${SERV00_DOMAIN}/api/health" | grep -q "ok"; then
        echo -e "${GREEN}‚úÖ API Ê≠£Â∏∏Â∑•‰Ωú${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  API ÂèØËÉΩÈúÄË¶ÅÈÖçÁΩÆÊàñË∞ÉËØï${NC}"
    fi
}

# ÊòæÁ§∫ÈÉ®ÁΩ≤‰ø°ÊÅØ
show_deployment_info() {
    echo -e "\n${GREEN}üéâ ÈÉ®ÁΩ≤ÂÆåÊàêÔºÅ${NC}"
    echo -e "${BLUE}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo -e "${BLUE}üìä ÈÉ®ÁΩ≤‰ø°ÊÅØ:${NC}"
    echo -e "   üåê ÁΩëÁ´ôÂú∞ÂùÄ: https://${SERV00_DOMAIN}"
    echo -e "   üîå API Âú∞ÂùÄ: https://${SERV00_DOMAIN}/api"
    echo -e "   üóÑÔ∏è Êï∞ÊçÆÂ∫ìÂêç: ${DB_NAME}"
    echo -e "   üë§ ÁÆ°ÁêÜÂëò: admin / admin123"
    echo -e "   ‚è∞ ÈÉ®ÁΩ≤Êó∂Èó¥: $(date)"
    echo -e "${BLUE}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo -e "${YELLOW}üìã ÂêéÁª≠Ê≠•È™§:${NC}"
    echo -e "   1. ËÆøÈóÆÁΩëÁ´ôÂπ∂‰ΩøÁî®ÁÆ°ÁêÜÂëòË¥¶Êà∑ÁôªÂΩï"
    echo -e "   2. Á´ãÂç≥‰øÆÊîπÈªòËÆ§ÁÆ°ÁêÜÂëòÂØÜÁ†Å"
    echo -e "   3. Ê∑ªÂä†ÊÇ®ÁöÑÁéØÂ¢ÉÈÖçÁΩÆ"
    echo -e "   4. ÊµãËØïÁéØÂ¢ÉÊ£ÄÊµãÂäüËÉΩ"
    echo -e "${BLUE}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    echo -e "${GREEN}üéä ‰∫´ÂèóÊÇ®ÁöÑÁéØÂ¢ÉÁÆ°ÁêÜÁ≥ªÁªüÔºÅ${NC}\n"
}

# Ê∏ÖÁêÜ‰∏¥Êó∂Êñá‰ª∂
cleanup() {
    echo -e "${BLUE}üßπ Ê∏ÖÁêÜ‰∏¥Êó∂Êñá‰ª∂...${NC}"
    rm -rf deployment
    echo -e "${GREEN}‚úÖ Ê∏ÖÁêÜÂÆåÊàê${NC}"
}

# ‰∏ªÂáΩÊï∞
main() {
    echo -e "${GREEN}üöÄ Serv00 ÁéØÂ¢ÉÁÆ°ÁêÜÁ≥ªÁªü‰∏ÄÈîÆÈÉ®ÁΩ≤${NC}"
    echo -e "${BLUE}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
    
    # Ê£ÄÊü•ÊòØÂê¶Âú®È°πÁõÆÊ†πÁõÆÂΩï
    if [ ! -f "package.json" ]; then
        echo -e "${RED}‚ùå ÈîôËØØ: ËØ∑Âú®È°πÁõÆÊ†πÁõÆÂΩïËøêË°åÊ≠§ËÑöÊú¨${NC}"
        exit 1
    fi
    
    # ÊâßË°åÈÉ®ÁΩ≤Ê≠•È™§
    check_config
    check_dependencies
    build_frontend
    create_env_config
    create_htaccess
    prepare_deployment
    upload_to_serv00
    remote_database_setup
    verify_deployment
    show_deployment_info
    cleanup
}

# ÈîôËØØÂ§ÑÁêÜ
trap 'echo -e "${RED}‚ùå ÈÉ®ÁΩ≤ËøáÁ®ã‰∏≠ÂèëÁîüÈîôËØØ${NC}"; cleanup; exit 1' ERR

# ËøêË°å‰∏ªÂáΩÊï∞
main "$@"
